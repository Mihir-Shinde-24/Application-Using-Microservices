server:
  port: 8081
  
# DB Config
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/userservice
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  application:
    name: USER-SERVICE

# Jpa Config
  jpa:
    hibernate:
      ddl-auto: update 
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        
# importing ServiceRegistry Config from ConfigServer
  config:
    import: configserver:http://localhost:8085
    
    
    
# Spring Security Config as a Client

  security:
    oauth2:

      resourceserver:
        jwt:
          issuer-uri: https://dev-49865484.okta.com/oauth2/default 
          
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa92xtcqiOR3vztX5d7
            client-secret: xH6XCA-qrJCs4XEg6FKtIdzSu_nnLfegiQOgM7PP
        provider:
          okta:
            issuer-uri: https://dev-49865484.okta.com/oauth2/default 
            
          
       
          
 

# Actuator Config
management:
  endpoints:
    web:
      exposure:
        include:
        - health
  endpoint:
    health:
      show-details: always
      
  health:
    circuitbreakers:
      enabled: true
    


    
# Circuit Breaker Config

resilience4j:
  circuitbreaker:
    instances:
      getUserBreaker:
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        automatic-transition-from-open-to-half-open-enabled: true
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        register-health-indicator: true
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED
        wait-duration-in-open-state: 6s
        
# RETRY Config
  retry:
    instances:
      getUserRetry:
        max-attempts: 3
        wait-duration: 2s
        
# RateLimiter Config

  ratelimiter:
    instances:
      getUserRateLimiter:
        timeout-duration: 10s
        limit-refresh-period: 5s
        limit-for-period: 1
        
        
# Okta Config
okta:
  oauth2:
    issuer: https://dev-49865484.okta.com/oauth2/default
    audience: api://default
        
              
# ServiceRegistryClient Config #commented since we are importing
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka
    